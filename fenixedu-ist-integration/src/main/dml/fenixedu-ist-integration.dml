package pt.ist.fenixedu.integration.domain;

enum pt.ist.fenixedu.integration.domain.accessControl.PersistentGroupMembersType as PersistentGroupMembersType;

valueType pt.ist.fenixedu.integration.domain.accounting.events.export.PrintedPaymentCodes as PrintedPaymentCodes {
    externalizeWith {
        String exportAsString();
    }
    
    internalizeWith importFromString();
}

class user.management.IstUsernameCounter {
    long lastValue;
}

class cgd.CgdCardCounter {
    int year;
    int count;
}

class CardDataAuthorizationLog extends .org.fenixedu.academic.domain.DomainOperationLog {
    String title;
    String answer;
}

class cgd.CgdCard {
    int serialNumber;
    boolean allowSendDetails;
    Boolean allowSendCardDetails;
    Boolean allowSendBankDetails;
    DateTime successfulSentData;
}

class BpiCard {
	boolean allowSendDetails;
	Boolean allowSendCardDetails;
	Boolean allowSendBankDetails;
	DateTime whenAllowChanged;
	DateTime whenCardAllowChanged;
	DateTime whenBankAllowChanged;
}
 
class SantanderCard {
	boolean allowSendDetails;
	Boolean allowSendCardDetails;
    Boolean allowSendBankDetails;
	DateTime whenAllowChanged;
	DateTime whenCardAllowChanged;
    DateTime whenBankAllowChanged;
}

class reports.StudentMeritReportFile extends .org.fenixedu.academic.domain.reports.GepReportFile {}

class student.importation.DgesBaseProcess extends .org.fenixedu.academic.domain.QueueJobWithFile {
    EntryPhase entryPhase;
}

class student.importation.DgesStudentImportationProcess extends student.importation.DgesBaseProcess {
}

class student.importation.DgesStudentImportationFile extends .org.fenixedu.academic.domain.File {
}

class student.importation.ExportDegreeCandidaciesByDegreeForPasswordGeneration extends student.importation.DgesBaseProcess {
}

class student.importation.ExportExistingStudentsFromImportationProcess extends student.importation.DgesBaseProcess {
}

class student.importation.DgesIngressionTypeMapping {
	String dgesCode (REQUIRED);
}

class accounting.events.export.DebtsFile extends .org.fenixedu.academic.domain.File {
    String errors;
}

class accounting.events.export.SIBSOutgoingPaymentFile extends accounting.events.export.DebtsFile {
    DateTime successfulSentDate;
    PrintedPaymentCodes printedPaymentCodes;
}

class accounting.events.export.SIBSOutgoingPaymentQueueJob extends .org.fenixedu.academic.domain.QueueJob {
    DateTime lastSuccessfulSentPaymentFileDate;
} 

class UnitFile extends .org.fenixedu.academic.domain.File {
    String description;
}

class UnitFileTag  {
    String name;
}

class accessControl.PersistentGroupMembers  {
    String name;
    PersistentGroupMembersType type;
}

class accessControl.PersistentMembersLinkGroup extends .org.fenixedu.bennu.core.domain.groups.PersistentGroup;

class serviceRequests.IstRegistryCodeGenerator extends .org.fenixedu.academic.domain.serviceRequests.InstitutionRegistryCodeGenerator  {
    Integer currentFirstCycle;
    Integer currentSecondCycle;
    Integer currentThirdCycle;
}

class student.PreEnrolment {
}

relation PreEnrolmentExecutionSemester {
    .org.fenixedu.academic.domain.ExecutionSemester playsRole executionSemester;
    student.PreEnrolment playsRole preEnrolments {
        multiplicity *;
    }
}

relation PreEnrolmentDegree {
    .org.fenixedu.academic.domain.Degree playsRole degree;
    student.PreEnrolment playsRole preEnrolments {
        multiplicity *;
    }
}

relation PreEnrolmentUser {
    .org.fenixedu.bennu.core.domain.User playsRole user;
    student.PreEnrolment playsRole preEnrolments {
        multiplicity *;
    }
}

relation PreEnrolmentCurricularCourse {
    .org.fenixedu.academic.domain.CurricularCourse playsRole curricularCourse;
    student.PreEnrolment playsRole preEnrolments {
        multiplicity *;
    }
}

relation PreEnrolmentCourseGroup {
    .org.fenixedu.academic.domain.degreeStructure.CourseGroup playsRole courseGroup;
    student.PreEnrolment playsRole preEnrolments {
        multiplicity *;
    }
}

relation BennuHasIstUsernameCounter {
    .org.fenixedu.bennu.core.domain.Bennu playsRole bennu {
        multiplicity 1..1;
    }
    user.management.IstUsernameCounter playsRole istUsernameCounter;
}

relation BennuCgdCardCounter {
    .org.fenixedu.bennu.core.domain.Bennu playsRole bennu {
        multiplicity 1..1;
    }
    cgd.CgdCardCounter playsRole cgdCardCounter {
        multiplicity *;
    }
}

relation CgdCardCounterCgdCard {
    cgd.CgdCardCounter playsRole cgdCardCounter {
        multiplicity 1..1;
    }
    cgd.CgdCard playsRole cgdCard {
        multiplicity *;
    }
}

relation CgdCardUser {
    cgd.CgdCard playsRole cgdCard {
        multiplicity *;
    }
    .org.fenixedu.bennu.core.domain.User playsRole user {
        multiplicity 1..1;
    }
}

relation BpiCardUser {
    BpiCard playsRole bpiCard {
        multiplicity 0..1;
    }
    .org.fenixedu.bennu.core.domain.User playsRole user {
        multiplicity 1..1;
    }
}

relation SantanderCardUser {
    SantanderCard playsRole santanderCard {
        multiplicity 0..1;
    }
    .org.fenixedu.bennu.core.domain.User playsRole user {
        multiplicity 1..1;
    }
}

relation DgesBaseProcessExecutionYear {
    .org.fenixedu.academic.domain.ExecutionYear playsRole executionYear;
    student.importation.DgesBaseProcess playsRole DgesBaseProcess {
        multiplicity *;
    }
}

relation ImportCandidaciesFromDgesProcessDgesImportationStudentFile {
    student.importation.DgesStudentImportationProcess playsRole dgesStudentImportationProcess;
    student.importation.DgesStudentImportationFile playsRole dgesStudentImportationFile;
}

relation DgesStudentImportationProcessCampus {
    .org.fenixedu.spaces.domain.Space playsRole dgesStudentImportationForCampus;
    student.importation.DgesStudentImportationProcess playsRole dgesStudentImportationProcess {
        multiplicity*;
    }
}

relation DgesStudentImportationProcessStudentCandidacy {
    student.importation.DgesStudentImportationProcess playsRole dgesStudentImportationProcess;
    .org.fenixedu.academic.domain.candidacy.StudentCandidacy playsRole studentCandidacy {
        multiplicity *;
    }
}

relation DgesIngressionTypeMappingIngressionType {
	student.importation.DgesIngressionTypeMapping playsRole dgesCode {
		multiplicity *;
	}
	.org.fenixedu.academic.domain.candidacy.IngressionType playsRole ingressionType {
		multiplicity 1..1;
	}
}

relation BennuDgesIngressionTypeMapping {
    .org.fenixedu.bennu.core.domain.Bennu playsRole rootDomainObject {
        multiplicity 1..1;
    }
    student.importation.DgesIngressionTypeMapping playsRole dgesIngressionTypeMapping {
        multiplicity *;
    }
}

relation SIBSOutgoingPaymentFileExecutionYear {
    .org.fenixedu.academic.domain.ExecutionYear playsRole executionYear;
    accounting.events.export.SIBSOutgoingPaymentFile playsRole sIBSOutgoingPaymentFiles {
        multiplicity *;
    }
}

relation AllowedToUploadInUnit {
    .org.fenixedu.academic.domain.organizationalStructure.Unit playsRole unitsWithUploadPermission {
        multiplicity *;
    }
    .org.fenixedu.academic.domain.Person playsRole allowedPeopleToUploadFiles {
        multiplicity *;
    }
}

relation UnitUnitFileTag {
    UnitFileTag playsRole unitFileTags {
        multiplicity *;
    }
    .org.fenixedu.academic.domain.organizationalStructure.Unit playsRole unit;
}

relation FileTagging {
    UnitFileTag playsRole unitFileTags {
        multiplicity *;
    }
    UnitFile playsRole taggedFiles {
        multiplicity *;
    }
}

relation UnitFilePerson {
    .org.fenixedu.academic.domain.Person playsRole uploader;
    UnitFile playsRole uploadedFiles {
        multiplicity *;
    }
}

relation UnitFileTagRootDomainObject {
    UnitFileTag playsRole unitFileTags {
        multiplicity *;
    }
    .org.fenixedu.bennu.core.domain.Bennu playsRole rootDomainObject;
}

relation UnitFileUnit {
    .org.fenixedu.academic.domain.organizationalStructure.Unit playsRole unit;
    UnitFile playsRole files {
        multiplicity *;
    }
}

relation RootDomainObjectPersistentGroupMembers {
    .org.fenixedu.bennu.core.domain.Bennu playsRole rootDomainObject;
    accessControl.PersistentGroupMembers playsRole persistentGroupMembers {
        multiplicity *;
    }
}

relation PersistentGroupMembersPerson {
    .org.fenixedu.academic.domain.Person playsRole persons {
        multiplicity *;
    }
    accessControl.PersistentGroupMembers playsRole persistentGroups {
        multiplicity *;
    }
}

relation PersistentGroupMembersUnit {
    .org.fenixedu.academic.domain.organizationalStructure.Unit playsRole unit;
    accessControl.PersistentGroupMembers playsRole persistentGroups {
        multiplicity *;
    }
}

relation PersistentMembersLinkGroupPersistentGroupMembers {
    public accessControl.PersistentMembersLinkGroup playsRole membersLinkGroup {
        multiplicity 0..1;
    }
    public accessControl.PersistentGroupMembers playsRole persistentGroupMembers {
        multiplicity 1..1;
    }
}

/**
 * Former Remote Plugin
 */

package pt.ist.fenixframework.plugins.remote.domain;

class RemoteSystem {
}

class RemoteHost {
    String name;
    String username;
    String password;
    Boolean allowInvocationAccess;
}

relation RemoteSystemRemoteHost {
    RemoteSystem playsRole remoteSystem;
    RemoteHost playsRole remoteHosts {
        multiplicity *;
    }
}

relation RemoteSystemDomainRoot {
    RemoteSystem playsRole remoteSystem;
    .pt.ist.fenixframework.DomainRoot playsRole domainRoot;
}


relation CompletedRegistrationToNotify {
    .org.fenixedu.bennu.core.domain.Bennu playsRole bennuCompletedRegistration {
        multiplicity 0..1;
    }
    .org.fenixedu.academic.domain.student.Registration playsRole registrationToNotify {
        multiplicity *;
    }
}
