# ðŸ”¥ðŸ”¥ðŸ”¥ðŸ”¥ðŸ”¥ This comment is here to force utf-8 ðŸ”¥ðŸ”¥ðŸ”¥ðŸ”¥ðŸ”¥
ACTIVE = Assets
ALL = All
ALREADY_DELIVERED_HARD_COPY = Document already delivered on paper
ELECTRONIC_DELIVERY = Document delivered electronically
ENDED_UNTIL_ONE_MONTH_AGO = Ending at 1 month
ENDED_UNTIL_ONE_YEAR_AGO = Ending at 1 year
ENDED_UNTIL_SIX_MONTHS_AGO = Ending at 6 months
ENDS_BEFORE_ONE_MONTH = Ends within 1 month
ENDS_BEFORE_TWO_MONTHS = Ends in 2 months
INACTIVE = Not active
WILL_DELIVER_HARD_COPY = Document to be delivered on paper
button.accept = Accept
button.acceptPrint = Accept and Print Card
button.acceptRegulation = I accept the rules
button.cancel = Cancel
button.consultCards = Consult
button.copy = '
button.copyAll = Copy all
button.export = Export
button.exportExcel = Excel Export
button.notify = Notify
button.reject = Reject
button.remove = Remove
button.renewCards = Renew
button.submit = Submit
error.alreadyExistsCardNumber = Card number already assigned.
error.beginDateBeforeOrEqualEndDate = Start date after or equal to end date.
error.cannot.renew.group = Unable to automatically renew the cards belonging to the selected group.
error.card.mustFillInDates = You must fill in both dates.
error.file.extension = The file must be in pdf format or be a picture in gif or jpg
error.file.size = The file size can not exceed 2 MB (mega bytes)
error.filemanager.unableDeleteFile = Could not delete the file.
error.inccorrect.file = The uploaded file is not correct.
error.invalidCardNumber = Invalid card number.
error.invalidGroup = Invalid group.
error.maxLengthExceeded = This field can only have maximum {0} characters
error.no.file = There was no submitted file.
error.number.below.minimum = The card number must be greater than 0.
error.oldDate.biggerThan.newDate = The new end date must be greater than the current end date.
error.overlapsAnotherInterval = The indicated period is another overlap period.
error.parkingParty.invalidPeriod = The end date must be greater than or equal to start date.
error.parkingParty.no.cars = The user can not be associated with no car.
error.parkingParty.no.vehicles = The user can not exist without vehicles attached.
error.parkingParty.vehicle.mandatoryData = You must fill out the tag and registration for all vehicles which will not be erased.
error.parkingParty.vehicle.repeatedPlates = Vehicles can not exist with the same registration.
error.person.existent.docIdAndType = The identification document indicated already registered in the system.
error.requiredCardNumber = You must enter the card number.
error.requiredDocumentDelivery = You must choose a delivery mode of the document.
error.requiredField = This field must be filled.
error.requiredGroup = You must join a group.
error.requiredStudentField = You must specify the document.
error.timeout = Time out to complete the form.
error.unit.does.not.exist = The unit itself does not exist.
hidden.accepted = accepted
hidden.addVehicle = addVehicle
hidden.carPlateNumber = carPlateNumber
hidden.code = code
hidden.parkingPartyID = parkingPartyID
hidden.parkingRequestState = parkingRequestState
hidden.partyClassification = partyClassification
hidden.personName = personName
label.actualState = Current Status
label.aditionalInformation = More information
label.beginDate = Start date
label.cardEndDate = End Date
label.cardNumber = Card Number
label.cardSearchPeriod = Time criterion
label.cardStartDate = Start Date
label.cardValidPeriod = Card valid forever?
label.changeGroup = Switch to the group
label.choose = Choose an option
label.confirm.create.external.person = Confirm Existence of People
label.creationDate = Date of application
label.currentFile = The file {0} is
label.delete = Delete
label.deleteVehicle = Delete
label.deliverOnlineDocument = I intend to deliver the document ({0}) electronically.
label.deliveredDocument = I declare what I already have the document ({0}) with the Park Management.
label.driverLicense = Driving Licence
label.driverLicenseDocument = Driving Licence
label.edit = Edit
label.editParkingDocuments = Edit documents and vehicles
label.editPeriod = Edit period
label.email = E-mail
label.endDate = End date
label.exportToPDF = Export to PDF
label.firstCar = Vehicle 1
label.firstCarMake = Brand
label.firstCarOwnerId = Identity
label.firstCarPlateNumber = Registration
label.firstCarPropertyRegistry = Property Registration
label.firstDeclarationAuthorization = Statement of Authorization
label.firstInsurance = Vehicle Insurance
label.fromAddress = lena@cd.ist.utl.pt
label.group = Group
label.has.parking.party = It is user?
label.history = History
label.historyDate = Historical Data
label.insertNewPeriod = Insert new period
label.insertParkingDocuments = Input data of the vehicle (s) and send documents
label.invited = Invited / Others
label.invitedEmployee = Non profit organization employee
label.invitedGrantOwner = FCT Scholarship holder
label.invitedResearcher = Researcher
label.limitedCard = limited card
label.limitless = Unlimited
label.limitlessAccessCard = Unlimited
label.limitlessCard = unlimited card
label.managerNote = Note to the manager of the Park
label.mobile = Mobile
label.msAccessFile = File Access Park
label.name = Name
label.newUser = New user
label.no = No
label.noRecordFound = No records found with the data supplied
label.note = Note to users
label.number = Number
label.onlineRequest = Online
label.otherNumbers = Other Numbers
label.ownVehicle = Own vehicle
label.parkUserInfo = User Information
label.parking = Parking
label.parkingGroup = Group
label.parkingRegulation = Access to Car Parks {0}
label.parkingRegulation.pdf = (PDF)
label.parkingState = Member Card
label.parkingUserState = State user
label.periodNotSpecified = Not defined periods
label.personActualClassification = Present Condition
label.personLastClassification = Last condition
label.personal.info = Personal Data
label.phdNumber = No PhD
label.phone = Telephone
label.printCard = Print Card
label.read.parkingRegulation = Regulation
label.renewToUnlimitedCard = Renew unlimited card.
label.renewToUnlimitedCardAs = Renew unlimited card as
label.renewalEndDate = To renew
label.request = Request
label.requestLimitlessAccessCard = Unlimited Access Card Request
label.requestList = Wish List
label.requestState = Order status
label.requestedAs = Request as
label.requestedLimitlessAccessCard = The application for the card-type access to the park
label.requestedLimitlessAccessCard.done = was made
label.requests = Orders
label.search = Search
label.searchUser = Find User
label.secondCar = Vehicle 2
label.secondCarMake = Brand
label.secondCarOwnerId = Identity
label.secondCarPlateNumber = Registration
label.secondCarPropertyRegistry = Property Registration
label.secondDeclarationAuthorization = Statement of Authorization
label.secondInsurance = Vehicle Insurance
label.state = State
label.subject = Park Management - Request for Parking
label.submitAs = Checkout as a
label.type = Type
label.unrejectParkingRequest = Unreject parking request
label.user = User
label.username = User
label.userNotFound = There were no people with the chosen criterion.
label.userWithoutRequests = User requests made without
label.vehicleAuthorizationDeclaration = Statement of Authorization
label.vehicleInsurance = Insurance
label.vehicleMake = Brand
label.vehicleOwnerID = Identity
label.vehiclePlateNumber = Registration
label.vehiclePropertyRegistry = Property Registration
label.vehicles = Vehicle (s)
label.vehiclesNotFound = There are no vehicles
label.willdeliverDocument = I intend to deliver the document ({0}) on paper.
label.yes = Yes
link.addVehicle = Add vehicle
link.back = Back
link.create.external.person = Create User
link.create.person.user = Create new person / patient
link.editUserCard = Edit User
link.export = Export to Access
link.exportToExcel = Export to Excel
link.manageRequestsPeriods = Managing Demand Periods
link.mergeFiles = Export Base
link.parkingCards = Parking Cards
link.regulation = Regulation
link.users = Users
link.verifyInsurance = Check insurance
link.view = View
link.viewDocument = See document
link.viewHistory = View History
link.viewRequest = View request
link.viewUser = See user
message.acceptRegulation = I declare that I accept everything that is defined in the regulation of access to the car park of the {0} (Alameda).
message.acceptRegulationCondition = The explicit acceptance of the regulation of access to the car park of the {0} (Alameda) is a necessary condition for the granting of access card.
message.acceptedParkingRequestState = Your request for access to parking for the {0} has been accepted.
message.acceptedRegulation = <p class="mvert05"> <strong>Authorization and knowledge of the Rules</strong> </p><p class="mvert05"> {0}, with the personnel number {1}, you acknowledge and expressly accepts the Regulation of Access to Parking from the {3} <i>Campus</i> located in Alameda, which is available on the website of the Board of the {2} , including the penalties provided for therein and in particular the possibility of clamping and removal of vehicles for which I blame them. </p><p class="mvert05"> I declare that I accept the collection of images, under video surveillance in the Park with the aim of protecting people and property. </p>
message.attentionRegulation = <span class="highlight1">Warning:</span> The delivery of digitized version of the documents is mandatory for students and any applicant without an employment contract with the {0}.
message.canRenewToUnlimitedCard = You can apply for an unlimited card. Failure to do so within their applications will be renewed as limited access.
message.fileFormat = the files must be in PDF or image in GIF or JPG format
message.forMoreThan2Cars = Note: more than 2 vehicles requires contact with the Park Management.
message.howManyVehicles = How many vehicles?
message.howToSubmit = click on <i>Browse</i> and select the corresponding document or type the full path in the text box (eg <i>c:  documentsDrivers_License.jpg)</i>
message.maxFileSize = files can not exceed 2MB in size
message.no.necessaryPersonalInfo = In <strong>Information> Contacts</strong> has to fill the e-mail and a phone number or cell phone.
message.no.parkingRequests = Has no pending requests.
message.noParkingPartiesSelected = Not select any user.
message.pendingParkingRequestState = Your request for access to parking for the STI is pending.
message.periodForUnlimitedCardExpired = Not open the nomination period the card unlimited access.
message.person.identification = <strong>{0}</strong><br/>NÂº {1}<br/>
message.personalDataCondition = The provision of personal data <strong>Name, E-mail, telephone</strong> or <strong>cell phone</strong> is a necessary condition for the granting of access card.
message.personalDataUse = Note: there will be a computer record of any personal data apart from those that are strictly necessary for the management of the park: the name, personnel number, the type of connection to the STI, (s) registration (s) and phone number. Copies of personal documents to hand over the management of the park will be a paper file accessible only to the management of the park.
message.rejectedParkingRequestState = Your request for access to parking for the {0} was not accepted.
message.renewToUnlimitedCardRequested = Has an application for renewal of the card as <strong>unlimited.</strong>
message.renewUnlimitedParkingRequest.sucess = Your request for renewal was registered. You can view the status of your order at the end of this page.
message.requestQuotas = Note: The class of user only grants you limited access to parking. However, you may be able to apply for a card for unlimited access (see {0}, Annex I). If you would select the option below.
message.requestQuotasLimitedCard = Note: The class of user only grants you limited access to parking.
message.requestsNumber = Found {0} requests
message.toSubmitDocuments = To submit the necessary documents
message.userRequestedAs = The application was submitted as
message.userRequestedCardType = The user made the request to park
private.administrator.functionalitiesmanagement.displayfunctionalities.dspace.parking = Personal - Parking
private.parking = Parking
private.parking.exportbase = Parking - Export Base
private.parking.managingdemandperiods = Parking - Managing Demand Periods
private.parking.orders = Parking - Orders
private.parking.parkingcards = Parking - Parking Cards
private.parking.users = Parking - Users
private.personal.dspace.parking = Personal - Parking
radio.Id1 = Id1
radio.Id2 = Id2
radio.cardAlwaysValid = cardAlwaysValid
radio.declaration1 = declaration1
radio.declaration2 = declaration2
radio.driverLicense = driverLicense
radio.ownVehicle1 = ownVehicle1
radio.ownVehicle2 = ownVehicle2
radio.registry1 = registry1
radio.registry2 = registry2
radio.vehicle2 = vehicle2
text.cardNumber = cardNumber
title.anexIV = {0} completed
title.anexIV.label = Annex IV
title.documentDelivery = Must state that has already provided the documents or make it one of the following ways
title.documentDeliveryOnline = delivery of digitized version of document (required for students and any applicant without an employment contract with {0})
title.documentDeliveryPaper = delivery of the paper version of the document with the Park Management
title.editUser = Edit User
title.exportFile = Export Base
title.forEachVehicle = per vehicle
title.forEachVehicleNotOwned = for each vehicle that the applicant is not owner
title.insurance = Insurance
title.ownerId = BI Owner
title.registo = Property Registration
title.regulation = The Regulation requires that copies of the following documents are provided to Park Management (the Board)
title.renewParkingCards = Renewal of Cards
